{
  "openapi": "3.1.0",
  "info": {
    "title": "FountainAI Orchestrator API",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/health": {
      "get": {
        "tags": [
          "Orchestrator"
        ],
        "summary": "Health",
        "description": "Returns {\"status\":\"ok\",\"uptime\":\"XhYmZs\"}.",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/services": {
      "get": {
        "tags": [
          "Orchestrator"
        ],
        "summary": "List Services",
        "description": "Retrieve a paginated list of services.\nOptional filter on `status` if provided.",
        "operationId": "list_services",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Limit",
              "default": 50,
              "title": "Limit"
            },
            "description": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(running|updating|error)$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Status",
              "title": "Status"
            },
            "description": "Status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Orchestrator"
        ],
        "summary": "Create Service",
        "description": "Create a new service.  \n- **name** (query parameter): unique service name  \n- **spec** (JSON body): details conforming to ServiceSpec",
        "operationId": "create_service",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name",
              "title": "Name"
            },
            "description": "Name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceSpec"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/services/{service}": {
      "get": {
        "tags": [
          "Orchestrator"
        ],
        "summary": "Get Service",
        "description": "Fetch detailed information about a single service.",
        "operationId": "get_service",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDetail"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Orchestrator"
        ],
        "summary": "Delete Service",
        "description": "Delete a service by name. Returns HTTP 204 on success.",
        "operationId": "delete_service",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/services/{service}/deploy": {
      "post": {
        "tags": [
          "Orchestrator"
        ],
        "summary": "Deploy Service",
        "description": "Trigger a deployment for the specified service.",
        "operationId": "deploy_service",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployResponse"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/deploy": {
      "post": {
        "tags": [
          "Orchestrator"
        ],
        "summary": "Batch Deploy",
        "description": "Accepts a list of service names in `request.services`.  \nReturns a BatchDeployResponse with an array of DeployResponse objects.",
        "operationId": "batch_deploy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDeployResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/services/{service}/config": {
      "get": {
        "tags": [
          "Orchestrator"
        ],
        "summary": "Get Config",
        "description": "Retrieve the current config (env & ports) for the specified service.",
        "operationId": "get_config",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigDetail"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Orchestrator"
        ],
        "summary": "Patch Config",
        "description": "Partially update the service configuration.\nOnly the fields provided in ConfigPatch will be modified.",
        "operationId": "patch_config",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigDetail"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/services/{service}/logs": {
      "get": {
        "tags": [
          "Orchestrator"
        ],
        "summary": "Get Logs",
        "description": "Return the last `tail` lines of logs for the given service.",
        "operationId": "get_logs",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service"
            }
          },
          {
            "name": "tail",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Tail",
              "default": 100,
              "title": "Tail"
            },
            "description": "Tail"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/services/{service}/rollback": {
      "post": {
        "tags": [
          "Orchestrator"
        ],
        "summary": "Rollback Service",
        "description": "Initiate a rollback for the specified service.",
        "operationId": "rollback_service",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployResponse"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/clientgen/{service}/regenerate": {
      "post": {
        "tags": [
          "ClientGen"
        ],
        "summary": "Regenerate Client",
        "description": "Trigger regeneration of the client SDK for the given service.",
        "operationId": "regenerate_client",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientStatusResponse"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/clientgen/status/{service}": {
      "get": {
        "tags": [
          "ClientGen"
        ],
        "summary": "Get Client Status",
        "description": "Return the current status of client SDK generation for the given service.",
        "operationId": "get_client_status",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientStatusResponse"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BatchDeployResponse": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/DeployResponse"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "results"
        ],
        "title": "BatchDeployResponse"
      },
      "ClientStatusResponse": {
        "properties": {
          "service": {
            "type": "string",
            "title": "Service"
          },
          "last_generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Last Generated At"
          },
          "checksum": {
            "type": "string",
            "title": "Checksum"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "service",
          "last_generated_at",
          "checksum",
          "status"
        ],
        "title": "ClientStatusResponse"
      },
      "ConfigDetail": {
        "properties": {
          "env": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Env"
          },
          "ports": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Ports"
          }
        },
        "type": "object",
        "required": [
          "env",
          "ports"
        ],
        "title": "ConfigDetail"
      },
      "ConfigPatch": {
        "properties": {
          "env": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env"
          },
          "ports": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ports"
          }
        },
        "type": "object",
        "title": "ConfigPatch"
      },
      "ConfigReference": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "target": {
            "type": "string",
            "title": "Target"
          }
        },
        "type": "object",
        "required": [
          "name",
          "target"
        ],
        "title": "ConfigReference"
      },
      "DeployRequest": {
        "properties": {
          "services": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Services"
          }
        },
        "type": "object",
        "required": [
          "services"
        ],
        "title": "DeployRequest"
      },
      "DeployResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "title": "DeployResponse"
      },
      "ErrorResponse": {
        "properties": {
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "title": "ErrorResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "uptime": {
            "type": "string",
            "title": "Uptime"
          }
        },
        "type": "object",
        "required": [
          "status",
          "uptime"
        ],
        "title": "HealthResponse"
      },
      "ServiceDetail": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "ports": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Ports"
          },
          "secrets": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Secrets"
          },
          "configs": {
            "items": {
              "$ref": "#/components/schemas/ConfigReference"
            },
            "type": "array",
            "title": "Configs"
          }
        },
        "type": "object",
        "required": [
          "name",
          "status",
          "ports",
          "secrets",
          "configs"
        ],
        "title": "ServiceDetail"
      },
      "ServiceListResponse": {
        "properties": {
          "services": {
            "items": {
              "$ref": "#/components/schemas/ServiceDetail"
            },
            "type": "array",
            "title": "Services"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "limit": {
            "type": "integer",
            "title": "Limit"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          }
        },
        "type": "object",
        "required": [
          "services",
          "total",
          "limit",
          "offset"
        ],
        "title": "ServiceListResponse"
      },
      "ServiceSpec": {
        "properties": {
          "image": {
            "type": "string",
            "title": "Image"
          },
          "ports": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ports",
            "default": {
            }
          },
          "secrets": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secrets",
            "default": [
            ]
          },
          "configs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ConfigReference"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configs",
            "default": [
            ]
          }
        },
        "type": "object",
        "required": [
          "image"
        ],
        "title": "ServiceSpec"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  },
  "servers": [
    {
      "url": "https://fountain.coach"
    }
  ]
}